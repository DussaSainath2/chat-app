package com.example.controller;

import java.util.List;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.model.GuestUser;

@RestController
@RequestMapping("/api/users")
public class UserController {
	
	@Autowired
	private MongoTemplate mongoTemplate;
	
    @Autowired
    private RedisTemplate<String, String> redisTemplate;
 
    @GetMapping("/online")
    public ResponseEntity<List<GuestUser>> getOnlineUsers() {
        try {
            Set<String> onlineUserIds = redisTemplate.opsForSet().members("onlineUsers");
            
            if (onlineUserIds == null || onlineUserIds.isEmpty()) {
                return ResponseEntity.ok(List.of());
            }

            Query query = new Query(Criteria.where("id").in(onlineUserIds));
            List<GuestUser> onlineUsers = mongoTemplate.find(query, GuestUser.class);

            return ResponseEntity.ok(onlineUsers);
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
        }
    }}
    
    
 
    
    /*
    @GetMapping("/online")
    public ResponseEntity<Set<String>> getOnlineUsers() {
        try {
            Set<String> onlineUsers = redisTemplate.opsForSet().members("onlineUsers");
            return ResponseEntity.ok(onlineUsers);
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
        }
        
        */
 








































