package com.example.controller;

import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api/users")
public class UserController {
    @Autowired
    private RedisTemplate<String, String> redisTemplate;

    @GetMapping("/online")
    public ResponseEntity<List<User>> getOnlineUsers() {
        try {
            Set<String> onlineUserIds = redisTemplate.opsForSet().members("onlineUsers");

            if (onlineUserIds == null || onlineUserIds.isEmpty()) {
                return ResponseEntity.ok(List.of()); // empty list
            }

            Query query = Query.query(Criteria.where("id").in(onlineUserIds));
            query.fields().include("id").include("name").include("age").include("country").include("gender"); // only required fields

            List<GuestUser> users = mongoTemplate.find(query, GuestUser.class);
            return ResponseEntity.ok(users);
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
        }
    }
}
 
}
}
